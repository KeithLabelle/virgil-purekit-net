// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Passw0rd.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Passw0rd
{

    /// <summary>Holder for reflection information generated from Passw0rd.proto</summary>
    public static partial class Passw0rdReflection
    {

        #region Descriptor
        /// <summary>File descriptor for Passw0rd.proto</summary>
        public static pbr::FileDescriptor Descriptor
        {
            get { return descriptor; }
        }
        private static pbr::FileDescriptor descriptor;

        static Passw0rdReflection()
        {
            byte[] descriptorData = global::System.Convert.FromBase64String(
                string.Concat(
                  "Cg5QYXNzdzByZC5wcm90bxIIcGFzc3cwcmQiMQoORGF0YWJhc2VSZWNvcmQS",
                  "DwoHdmVyc2lvbhgBIAEoDRIOCgZyZWNvcmQYAiABKAwiJAoRRW5yb2xsbWVu",
                  "dFJlcXVlc3QSDwoHdmVyc2lvbhgBIAEoDSI3ChJFbnJvbGxtZW50UmVzcG9u",
                  "c2USDwoHdmVyc2lvbhgBIAEoDRIQCghyZXNwb25zZRgCIAEoDCI5ChVWZXJp",
                  "ZnlQYXNzd29yZFJlcXVlc3QSDwoHdmVyc2lvbhgBIAEoDRIPCgdyZXF1ZXN0",
                  "GAIgASgMIioKFlZlcmlmeVBhc3N3b3JkUmVzcG9uc2USEAoIcmVzcG9uc2UY",
                  "ASABKAwiPQoUVmVyc2lvbmVkVXBkYXRlVG9rZW4SDwoHdmVyc2lvbhgBIAEo",
                  "DRIUCgx1cGRhdGVfdG9rZW4YAiABKAwiKgoJSHR0cEVycm9yEgwKBGNvZGUY",
                  "ASABKA0SDwoHbWVzc2FnZRgCIAEoCWIGcHJvdG8z"));
            descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
                new pbr::FileDescriptor[] { },
                new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Passw0rd.DatabaseRecord), global::Passw0rd.DatabaseRecord.Parser, new[]{ "Version", "Record" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Passw0rd.EnrollmentRequest), global::Passw0rd.EnrollmentRequest.Parser, new[]{ "Version" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Passw0rd.EnrollmentResponse), global::Passw0rd.EnrollmentResponse.Parser, new[]{ "Version", "Response" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Passw0rd.VerifyPasswordRequest), global::Passw0rd.VerifyPasswordRequest.Parser, new[]{ "Version", "Request" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Passw0rd.VerifyPasswordResponse), global::Passw0rd.VerifyPasswordResponse.Parser, new[]{ "Response" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Passw0rd.VersionedUpdateToken), global::Passw0rd.VersionedUpdateToken.Parser, new[]{ "Version", "UpdateToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Passw0rd.HttpError), global::Passw0rd.HttpError.Parser, new[]{ "Code", "Message" }, null, null, null)
                }));
        }
        #endregion

    }
    #region Messages
    public sealed partial class DatabaseRecord : pb::IMessage<DatabaseRecord>
    {
        private static readonly pb::MessageParser<DatabaseRecord> _parser = new pb::MessageParser<DatabaseRecord>(() => new DatabaseRecord());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DatabaseRecord> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Passw0rd.Passw0rdReflection.Descriptor.MessageTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DatabaseRecord()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DatabaseRecord(DatabaseRecord other) : this()
        {
            version_ = other.version_;
            record_ = other.record_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DatabaseRecord Clone()
        {
            return new DatabaseRecord(this);
        }

        /// <summary>Field number for the "version" field.</summary>
        public const int VersionFieldNumber = 1;
        private uint version_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Version
        {
            get { return version_; }
            set
            {
                version_ = value;
            }
        }

        /// <summary>Field number for the "record" field.</summary>
        public const int RecordFieldNumber = 2;
        private pb::ByteString record_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Record
        {
            get { return record_; }
            set
            {
                record_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as DatabaseRecord);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DatabaseRecord other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Version != other.Version) return false;
            if (Record != other.Record) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Version != 0) hash ^= Version.GetHashCode();
            if (Record.Length != 0) hash ^= Record.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Version != 0)
            {
                output.WriteRawTag(8);
                output.WriteUInt32(Version);
            }
            if (Record.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteBytes(Record);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Version != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
            }
            if (Record.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(Record);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DatabaseRecord other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Version != 0)
            {
                Version = other.Version;
            }
            if (other.Record.Length != 0)
            {
                Record = other.Record;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Version = input.ReadUInt32();
                            break;
                        }
                    case 18:
                        {
                            Record = input.ReadBytes();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class EnrollmentRequest : pb::IMessage<EnrollmentRequest>
    {
        private static readonly pb::MessageParser<EnrollmentRequest> _parser = new pb::MessageParser<EnrollmentRequest>(() => new EnrollmentRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EnrollmentRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Passw0rd.Passw0rdReflection.Descriptor.MessageTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnrollmentRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnrollmentRequest(EnrollmentRequest other) : this()
        {
            version_ = other.version_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnrollmentRequest Clone()
        {
            return new EnrollmentRequest(this);
        }

        /// <summary>Field number for the "version" field.</summary>
        public const int VersionFieldNumber = 1;
        private uint version_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Version
        {
            get { return version_; }
            set
            {
                version_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as EnrollmentRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EnrollmentRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Version != other.Version) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Version != 0) hash ^= Version.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Version != 0)
            {
                output.WriteRawTag(8);
                output.WriteUInt32(Version);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Version != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EnrollmentRequest other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Version != 0)
            {
                Version = other.Version;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Version = input.ReadUInt32();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class EnrollmentResponse : pb::IMessage<EnrollmentResponse>
    {
        private static readonly pb::MessageParser<EnrollmentResponse> _parser = new pb::MessageParser<EnrollmentResponse>(() => new EnrollmentResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EnrollmentResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Passw0rd.Passw0rdReflection.Descriptor.MessageTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnrollmentResponse()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnrollmentResponse(EnrollmentResponse other) : this()
        {
            version_ = other.version_;
            response_ = other.response_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnrollmentResponse Clone()
        {
            return new EnrollmentResponse(this);
        }

        /// <summary>Field number for the "version" field.</summary>
        public const int VersionFieldNumber = 1;
        private uint version_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Version
        {
            get { return version_; }
            set
            {
                version_ = value;
            }
        }

        /// <summary>Field number for the "response" field.</summary>
        public const int ResponseFieldNumber = 2;
        private pb::ByteString response_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Response
        {
            get { return response_; }
            set
            {
                response_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as EnrollmentResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EnrollmentResponse other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Version != other.Version) return false;
            if (Response != other.Response) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Version != 0) hash ^= Version.GetHashCode();
            if (Response.Length != 0) hash ^= Response.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Version != 0)
            {
                output.WriteRawTag(8);
                output.WriteUInt32(Version);
            }
            if (Response.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteBytes(Response);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Version != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
            }
            if (Response.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(Response);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EnrollmentResponse other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Version != 0)
            {
                Version = other.Version;
            }
            if (other.Response.Length != 0)
            {
                Response = other.Response;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Version = input.ReadUInt32();
                            break;
                        }
                    case 18:
                        {
                            Response = input.ReadBytes();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class VerifyPasswordRequest : pb::IMessage<VerifyPasswordRequest>
    {
        private static readonly pb::MessageParser<VerifyPasswordRequest> _parser = new pb::MessageParser<VerifyPasswordRequest>(() => new VerifyPasswordRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<VerifyPasswordRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Passw0rd.Passw0rdReflection.Descriptor.MessageTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VerifyPasswordRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VerifyPasswordRequest(VerifyPasswordRequest other) : this()
        {
            version_ = other.version_;
            request_ = other.request_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VerifyPasswordRequest Clone()
        {
            return new VerifyPasswordRequest(this);
        }

        /// <summary>Field number for the "version" field.</summary>
        public const int VersionFieldNumber = 1;
        private uint version_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Version
        {
            get { return version_; }
            set
            {
                version_ = value;
            }
        }

        /// <summary>Field number for the "request" field.</summary>
        public const int RequestFieldNumber = 2;
        private pb::ByteString request_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Request
        {
            get { return request_; }
            set
            {
                request_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as VerifyPasswordRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(VerifyPasswordRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Version != other.Version) return false;
            if (Request != other.Request) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Version != 0) hash ^= Version.GetHashCode();
            if (Request.Length != 0) hash ^= Request.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Version != 0)
            {
                output.WriteRawTag(8);
                output.WriteUInt32(Version);
            }
            if (Request.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteBytes(Request);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Version != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
            }
            if (Request.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(Request);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(VerifyPasswordRequest other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Version != 0)
            {
                Version = other.Version;
            }
            if (other.Request.Length != 0)
            {
                Request = other.Request;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Version = input.ReadUInt32();
                            break;
                        }
                    case 18:
                        {
                            Request = input.ReadBytes();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class VerifyPasswordResponse : pb::IMessage<VerifyPasswordResponse>
    {
        private static readonly pb::MessageParser<VerifyPasswordResponse> _parser = new pb::MessageParser<VerifyPasswordResponse>(() => new VerifyPasswordResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<VerifyPasswordResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Passw0rd.Passw0rdReflection.Descriptor.MessageTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VerifyPasswordResponse()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VerifyPasswordResponse(VerifyPasswordResponse other) : this()
        {
            response_ = other.response_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VerifyPasswordResponse Clone()
        {
            return new VerifyPasswordResponse(this);
        }

        /// <summary>Field number for the "response" field.</summary>
        public const int ResponseFieldNumber = 1;
        private pb::ByteString response_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Response
        {
            get { return response_; }
            set
            {
                response_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as VerifyPasswordResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(VerifyPasswordResponse other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Response != other.Response) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Response.Length != 0) hash ^= Response.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Response.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteBytes(Response);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Response.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(Response);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(VerifyPasswordResponse other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Response.Length != 0)
            {
                Response = other.Response;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Response = input.ReadBytes();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class VersionedUpdateToken : pb::IMessage<VersionedUpdateToken>
    {
        private static readonly pb::MessageParser<VersionedUpdateToken> _parser = new pb::MessageParser<VersionedUpdateToken>(() => new VersionedUpdateToken());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<VersionedUpdateToken> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Passw0rd.Passw0rdReflection.Descriptor.MessageTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VersionedUpdateToken()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VersionedUpdateToken(VersionedUpdateToken other) : this()
        {
            version_ = other.version_;
            updateToken_ = other.updateToken_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VersionedUpdateToken Clone()
        {
            return new VersionedUpdateToken(this);
        }

        /// <summary>Field number for the "version" field.</summary>
        public const int VersionFieldNumber = 1;
        private uint version_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Version
        {
            get { return version_; }
            set
            {
                version_ = value;
            }
        }

        /// <summary>Field number for the "update_token" field.</summary>
        public const int UpdateTokenFieldNumber = 2;
        private pb::ByteString updateToken_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString UpdateToken
        {
            get { return updateToken_; }
            set
            {
                updateToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as VersionedUpdateToken);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(VersionedUpdateToken other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Version != other.Version) return false;
            if (UpdateToken != other.UpdateToken) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Version != 0) hash ^= Version.GetHashCode();
            if (UpdateToken.Length != 0) hash ^= UpdateToken.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Version != 0)
            {
                output.WriteRawTag(8);
                output.WriteUInt32(Version);
            }
            if (UpdateToken.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteBytes(UpdateToken);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Version != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
            }
            if (UpdateToken.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(UpdateToken);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(VersionedUpdateToken other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Version != 0)
            {
                Version = other.Version;
            }
            if (other.UpdateToken.Length != 0)
            {
                UpdateToken = other.UpdateToken;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Version = input.ReadUInt32();
                            break;
                        }
                    case 18:
                        {
                            UpdateToken = input.ReadBytes();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class HttpError : pb::IMessage<HttpError>
    {
        private static readonly pb::MessageParser<HttpError> _parser = new pb::MessageParser<HttpError>(() => new HttpError());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<HttpError> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Passw0rd.Passw0rdReflection.Descriptor.MessageTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HttpError()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HttpError(HttpError other) : this()
        {
            code_ = other.code_;
            message_ = other.message_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HttpError Clone()
        {
            return new HttpError(this);
        }

        /// <summary>Field number for the "code" field.</summary>
        public const int CodeFieldNumber = 1;
        private uint code_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Code
        {
            get { return code_; }
            set
            {
                code_ = value;
            }
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 2;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Message
        {
            get { return message_; }
            set
            {
                message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as HttpError);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(HttpError other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Code != other.Code) return false;
            if (Message != other.Message) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Code != 0) hash ^= Code.GetHashCode();
            if (Message.Length != 0) hash ^= Message.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Code != 0)
            {
                output.WriteRawTag(8);
                output.WriteUInt32(Code);
            }
            if (Message.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(Message);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Code != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Code);
            }
            if (Message.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(HttpError other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Code != 0)
            {
                Code = other.Code;
            }
            if (other.Message.Length != 0)
            {
                Message = other.Message;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Code = input.ReadUInt32();
                            break;
                        }
                    case 18:
                        {
                            Message = input.ReadString();
                            break;
                        }
                }
            }
        }

    }

    #endregion

}

#endregion Designer generated code